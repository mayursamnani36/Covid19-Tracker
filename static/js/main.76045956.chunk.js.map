{"version":3,"sources":["components/Card/Card.jsx","images/spinner.gif","components/Spinner/Spinner.jsx","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","images/image.png","App.js","index.js","components/Cards/Cards.module.css","App.module.css","components/Card/Card.module.css","components/Spinner/Spinner.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["CardComponent","className","cardTitle","value","lastUpdate","cardSubtitle","Grid","item","xs","md","component","Card","cx","styles","card","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","Date","toDateString","Spinner","src","SpinnerGif","alt","spinner","Info","data","confirmed","recovered","deaths","container","spacing","justify","infected","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","App","setData","setCountry","handleDataFetch","res","error","image","coronaImage","Cards","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.76045956.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Card.module.css';\r\n\r\nconst CardComponent = ({ className, cardTitle, value, lastUpdate, cardSubtitle }) => (\r\n  <Grid item xs={12} md={3} component={Card} className={cx(styles.card, className)}>\r\n    <CardContent>\r\n      <Typography color=\"textSecondary\" gutterBottom>\r\n        {cardTitle}\r\n      </Typography>\r\n      <Typography variant=\"h5\" component=\"h2\">\r\n        <CountUp start={0} end={value} duration={2.75} separator=\",\" />\r\n      </Typography>\r\n      <Typography color=\"textSecondary\">\r\n        {new Date(lastUpdate).toDateString()}\r\n      </Typography>\r\n      <Typography variant=\"body2\" component=\"p\">\r\n        {cardSubtitle}\r\n      </Typography>\r\n    </CardContent>\r\n  </Grid>\r\n);\r\n\r\nexport default CardComponent","export default __webpack_public_path__ + \"static/media/spinner.a53ec2da.gif\";","import React, { Fragment } from 'react';\r\nimport SpinnerGif from '../../images/spinner.gif';\r\n\r\nimport styles from './Spinner.module.css';\r\n\r\nconst Spinner = () => (\r\n  <Fragment>\r\n    <img src={SpinnerGif} alt='loading...' className={styles.spinner} />\r\n  </Fragment>\r\n);\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport CardComponent from '../Card/Card';\r\nimport styles from './Cards.module.css';\r\nimport Spinner from './../Spinner/Spinner';\r\n\r\nconst Info = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return <Spinner/>\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <CardComponent\r\n          className={styles.infected}\r\n          cardTitle=\"Infected\"\r\n          value={confirmed.value}\r\n          lastUpdate={lastUpdate}\r\n          cardSubtitle=\"Number of active cases from COVID-19.\"\r\n        />\r\n        <CardComponent\r\n          className={styles.recovered}\r\n          cardTitle=\"Recovered\"\r\n          value={recovered.value}\r\n          lastUpdate={lastUpdate}\r\n          cardSubtitle=\"Number of recoveries from COVID-19.\"\r\n        />\r\n        <CardComponent\r\n          className={styles.deaths}\r\n          cardTitle=\"Deaths\"\r\n          value={deaths.value}\r\n          lastUpdate={lastUpdate}\r\n          cardSubtitle=\"Number of deaths caused by COVID-19.\"\r\n        />\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport default Info;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl = url;\r\n    if(country){changeableUrl = `${url}/countries/${country}`}\r\n    try {\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n        return { confirmed, recovered, deaths, lastUpdate }\r\n    }\r\n    catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try{\r\n        const {data} = await axios.get(`${url}/daily`);\r\n        \r\n        const modifiedData = data.map((dailyData)=>({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }));\r\n        return modifiedData;\r\n    }\r\n    catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try{\r\n        const {data: {countries}} = await axios.get(`${url}/countries`);\r\n\r\n        return countries.map((country) => country.name);\r\n    }\r\n    catch(error){\r\n        console.log(error)\r\n    }\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api/';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\nimport styles from './Chart.module.css'\r\n\r\nconst Chart = ({data: {confirmed, recovered, deaths}, country}) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n    \r\n    useEffect(()=>{\r\n        const fetchAPI = async () =>{\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        // console.log(dailyData);\r\n        fetchAPI(); \r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData.length ?\r\n        (<Line\r\n            data={{\r\n                labels: dailyData.map(({date})=>date),\r\n                datasets: [\r\n                    {\r\n                        data: dailyData.map(({confirmed})=>confirmed),\r\n                        label: 'Infected',\r\n                        borderColor: '#3333ff',\r\n                        fill: true \r\n                    }, \r\n                    {\r\n                        data: dailyData.map(({deaths})=>deaths),\r\n                        label: 'Deaths',\r\n                        borderColor: 'red',\r\n                        backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                        fill: true\r\n                    }\r\n                ],\r\n            }}\r\n        />) : null\r\n    );\r\n    \r\n    const barChart = (\r\n        confirmed ?\r\n        <Bar\r\n            data={{\r\n                labels: ['Infected', 'Recovered', 'Deaths'],\r\n                datasets:[{\r\n                    label: 'People',\r\n                    backgroundColor: [\r\n                        'rgba(0, 0, 255, 0.5)',\r\n                        'rgba(0, 255, 0, 0.5)',\r\n                        'rgba(255, 0, 0, 0.5)',\r\n                    ],\r\n                    data: [confirmed.value, recovered.value, deaths.value]\r\n                }]\r\n            }}\r\n            options= {{\r\n                legend: {display: false},\r\n                title: {display: true, text: `Current state in ${country}`}\r\n            }}\r\n        /> \r\n        : null\r\n    )\r\n    return(\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {NativeSelect, FormControl} from '@material-ui/core'\r\nimport styles from './CountryPicker.module.css'\r\nimport {fetchCountries} from '../../api'\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n        fetchAPI();\r\n    }, [setFetchedCountries]);\r\n\r\n    return(\r\n        <FormControl className = {styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e)=>{handleCountryChange(e.target.value)}}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country, i) => <option key ={i} value={country}> {country} </option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","export default __webpack_public_path__ + \"static/media/image.9e5d4fc7.png\";","import React, { useState, useEffect } from 'react';\nimport Cards from './components/Cards/Cards';\nimport Chart from './components/Chart/Chart';\nimport CountryPicker from './components/CountryPicker/CountryPicker';\nimport { fetchData } from './api';\nimport styles from './App.module.css';\nimport coronaImage from './images/image.png';\n\nconst App = () => {\n  const [data, setData] = useState({});\n  const [country, setCountry] = useState('');\n\n  const handleDataFetch = async () => {\n    try {\n      const res = await fetchData();\n      setData(res);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const handleCountryChange = async (country) => {\n    try {\n      const res = await fetchData(country);\n      setData(res);\n      setCountry(country);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  useEffect(() => {\n    handleDataFetch();\n  }, []);\n\n  return (\n    <div className={styles.container}>\n      <img className={styles.image} src={coronaImage} alt=\"COVID-19\" />\n      <Cards data={data} />\n      <CountryPicker handleCountryChange={handleCountryChange} />\n      <Chart data={data} country={country} />\n    </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1igfx\",\"infected\":\"Cards_infected__3ZkEO\",\"recovered\":\"Cards_recovered__1Fn9G\",\"deaths\":\"Cards_deaths__1wCrY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__bqZvX\",\"image\":\"App_image__3IFaM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__16cqD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Spinner_spinner__1-xwf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__lnUjE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1nueb\"};"],"sourceRoot":""}